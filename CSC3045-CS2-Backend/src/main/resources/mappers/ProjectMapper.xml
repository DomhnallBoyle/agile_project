<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- Set the namespace below to the interface side of the sprintMapper -->
<mapper namespace="uk.ac.qub.csc3045.api.mapper.ProjectMapper">

    <!-- Result Maps -->

    <resultMap id="projectResultMap" type="Project">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <association property="manager" column="manager_id" javaType="User" select="uk.ac.qub.csc3045.api.mapper.UserMapper.selectManager"/>
        <association property="productOwner" column="product_owner_id" javaType="User" select="uk.ac.qub.csc3045.api.mapper.UserMapper.selectProductOwner"/>
        <collection property="scrumMasters" column="id" javaType="List" ofType="User" select="uk.ac.qub.csc3045.api.mapper.UserMapper.selectScrumMasters"/>
        <collection property="users" column="id" javaType="List" ofType="User" select="getUsersOnProject"/>
    </resultMap>

    <resultMap id="simpleProjectResultMap" type="Project">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <association property="manager" column="manager_id" javaType="User" select="uk.ac.qub.csc3045.api.mapper.UserMapper.selectManager"/>
    </resultMap>

    <!-- SELECT Queries -->

    <select id="getProjectById" resultMap="projectResultMap">
        SELECT *
        FROM PROJECT
        WHERE id = #{id}
    </select>

    <select id="getProjectDevelopers" resultMap="uk.ac.qub.csc3045.api.mapper.UserMapper.userResultMap">
        SELECT
            USER.ID  AS user_id,
            USER.FORENAME,
            USER.SURNAME,
            USER.EMAIL,
            USER.PROFILE_PICTURE,
            ROLES.ID AS roles_id,
            ROLES.DEVELOPER,
            ROLES.SCRUM_MASTER,
            ROLES.PRODUCT_OWNER
        FROM USER
            JOIN ROLES ON USER.ROLES_ID = ROLES.ID
            JOIN PROJECT_USER ON USER.ID = PROJECT_USER.USER_ID
        WHERE PROJECT_USER.PROJECT_ID = #{projectId}
              AND ROLES.DEVELOPER = TRUE
    </select>
    
    <select id="getUsersOnProject" resultMap="uk.ac.qub.csc3045.api.mapper.UserMapper.userResultMap">
        SELECT
            USER.ID  AS user_id,
            USER.FORENAME,
            USER.SURNAME,
            USER.EMAIL,
            USER.PROFILE_PICTURE,
            ROLES.ID AS roles_id,
            ROLES.DEVELOPER,
            ROLES.SCRUM_MASTER,
            ROLES.PRODUCT_OWNER
        FROM USER
            JOIN ROLES ON USER.ROLES_ID = ROLES.ID
            JOIN PROJECT_USER ON USER.ID = PROJECT_USER.USER_ID
        WHERE PROJECT_USER.PROJECT_ID = #{projectId}
    </select>

    <!-- INSERT Queries -->

    <insert id="createProject" parameterType="Project" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO project (name, description, manager_id, product_owner_id)
        VALUES (#{name}, #{description}, #{manager.id}, #{productOwner.id});
    </insert>

    <insert id="addToProjectTeam">
        INSERT INTO project_user (project_id, user_id)
        VALUES (#{projectId}, #{userId})
    </insert>

    <!-- UPDATE Queries -->

    <update id="updateProject" parameterType="Project">
        UPDATE project
        <set>
            name = #{name},
            description = #{description},
            manager_id = #{manager.id},
            <if test="productOwner != null">product_owner_id = #{productOwner.id},</if>
        </set>
        WHERE id = #{id};
    </update>

    <update id="setUserAsScrumMaster">
        UPDATE PROJECT_USER
        SET SCRUM_MASTER = #{value}
        WHERE PROJECT_ID = #{projectId}
              AND USER_ID = #{userId}
    </update>

</mapper>